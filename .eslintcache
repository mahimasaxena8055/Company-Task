[{"C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\index.js":"1","C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\App.js":"2","C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\TodoList.js":"3","C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\TodoForm.js":"4","C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\Todo.js":"5"},{"size":197,"mtime":1652351343593,"results":"6","hashOfConfig":"7"},{"size":281,"mtime":1652425460904,"results":"8","hashOfConfig":"7"},{"size":2971,"mtime":1652588712077,"results":"9","hashOfConfig":"7"},{"size":1348,"mtime":1652422073677,"results":"10","hashOfConfig":"7"},{"size":900,"mtime":1652586578923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ywh94s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\index.js",[],["26","27"],"C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\App.js",[],"C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\TodoList.js",["28"],"import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport logo from '../images/spottbabl.jpg';\n// import { CMultiSelect } from '@coreui/react-pro';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const LOCAL_STORAGE_KEY = \"react-do-list-todos\";\n\n    useEffect(() => {\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n        if (storageTodos) {\n            setTodos(storageTodos)\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n    }, [todos]);\n\n    const Add_CSM = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n        console.log(...todos);\n    };\n\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removeArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    };\n    //  const options = [\n    //     {\n    //       value: 0,\n    //       text: 'Angular',\n    //     },\n    //     {\n    //       value: 1,\n    //       text: 'Bootstrap',\n    //     },\n    //     {\n    //       value: 2,\n    //       text: 'React.js',\n    //     },\n    //     {\n    //       value: 3,\n    //       text: 'Vue.js',\n    //     },\n    //     {\n    //       label: 'backend',\n    //       options: [\n    //         {\n    //           value: 4,\n    //           text: 'Django',\n    //         },\n    //         {\n    //           value: 5,\n    //           text: 'Laravel',\n    //         },\n    //         {\n    //           value: 6,\n    //           text: 'Node.js',\n    //         },\n    //       ],\n    //     },\n    //   ]\n\n    return ( < >\n        <\n        nav >\n        <\n        a href = \"#\"\n        to = '/'\n        className = 'logo' >\n        <\n        img src = { logo }\n        alt = 'logo' / >\n        <\n        /a> <lebel classname = 'menu-icon' for = 'menu-btn' > <\n        span classname = 'nav-icon' >\n        <\n        /span> </lebel > < div className = \"items1\" >\n        <\n        h1 > YOUR SPOTTABL TEAM < /h1>  <\n        h3 > Spottbabl supports you all throughout < /h3>  <\n        /div> </nav > < div className = \"container1\" >\n        <\n        div >\n        <\n        h5 > Customer Success Managers < br / >\n        <\n        /h5>  </div > < div >\n        <\n        TodoForm onSubmit = { Add_CSM }\n        /> \n\n        <\n        Todo todos = { todos }\n        completeTodo = { completeTodo }\n        removeTodo = { removeTodo }\n        />\n\n\n        <\n        /div>  <\n        /div> { /* <CMultiSelect options={options} /> */ } <\n        />\n\n    );\n}\n\nexport default TodoList;","C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\TodoForm.js",[],"C:\\Users\\HP\\Downloads\\react-todo-list-master\\react-todo-list-master\\src\\components\\Todo.js",["29","30","31","32","33"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { TiEdit } from 'react-icons/ti';\nimport HdrAutoIcon from '@mui/icons-material/HdrAuto';\n\nfunction Todo({ todos, completeTodo, removeTodo }) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    return todos.map((todo, index) => (\n\n        <\n        div className = { todo.isComplete ? 'todo-row complete' : 'todo-row' }\n        key = { index } >\n        <\n        div key = { todo.id }\n        onClick = {\n            () => completeTodo(todo.id)\n        } > { todo.text } < /div>\n\n        <\n        div className = 'icons' >\n\n        <\n        DeleteIcon onClick = {\n            () => removeTodo(todo.id)\n        }\n        className = 'delete-icon' / >\n\n        <\n        /div>  <\n        /div>\n    ));\n};\n\nexport default Todo;",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":90,"column":9,"nodeType":"42","endLine":93,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"43","severity":1,"message":"48","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":19},{"ruleId":"43","severity":1,"message":"49","line":8,"column":12,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"50","line":8,"column":18,"nodeType":"45","messageId":"46","endLine":8,"endColumn":25},{"ruleId":"36","replacedBy":"51"},{"ruleId":"38","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'TiEdit' is defined but never used.","'HdrAutoIcon' is defined but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.",["53"],["54"],"no-global-assign","no-unsafe-negation"]